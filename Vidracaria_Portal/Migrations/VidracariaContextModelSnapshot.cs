// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vidracaria_Portal.Data.Context;

namespace Vidracaria_Portal.Migrations
{
    [DbContext(typeof(VidracariaContext))]
    partial class VidracariaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "52bcfa46-1fd7-4509-8919-8e0d651afb79",
                            ConcurrencyStamp = "f334e7d9-e4bf-4e20-822c-7a4ad750896e",
                            Name = "Administrador",
                            NormalizedName = "ADMINISTRADOR"
                        },
                        new
                        {
                            Id = "36144dcd-6bc5-4980-9c7a-64a7f0d69f1c",
                            ConcurrencyStamp = "3c2d51c6-c4fb-4ef9-afa2-7cf6ee2b2fb3",
                            Name = "Cliente",
                            NormalizedName = "CLIENTE"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(85)
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(85)
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("RoleId")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "ea5bbba4-1e98-4c61-ac16-5008d4a90c4e",
                            RoleId = "52bcfa46-1fd7-4509-8919-8e0d651afb79"
                        },
                        new
                        {
                            UserId = "080905d3-a941-4100-b35a-cbdc8eda222b",
                            RoleId = "36144dcd-6bc5-4980-9c7a-64a7f0d69f1c"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("Name")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Vidracaria_Portal.Models.Administrador.Cadastros.AluminiosModel", b =>
                {
                    b.Property<decimal>("CodigoAluminio")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("CorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<int>("EstoqueMaximo")
                        .HasColumnType("int");

                    b.Property<int>("EstoqueMinimo")
                        .HasColumnType("int");

                    b.Property<string>("Imagem")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Marca")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NomeAluminio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PrecoFabrica")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrecoVenda")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CodigoAluminio");

                    b.HasIndex("CorId");

                    b.ToTable("ALUMINIOS");
                });

            modelBuilder.Entity("Vidracaria_Portal.Models.Administrador.Cadastros.ClientesModel", b =>
                {
                    b.Property<decimal>("CodigoCliente")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CidadeCliente")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Documento")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("EstadoCliente")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.Property<int>("NumeroCasa")
                        .HasColumnType("int");

                    b.HasKey("CodigoCliente");

                    b.ToTable("CLIENTES");
                });

            modelBuilder.Entity("Vidracaria_Portal.Models.Administrador.Cadastros.FerragensModel", b =>
                {
                    b.Property<decimal>("CodigoFerragem")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("CorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<int>("EstoqueMaximo")
                        .HasColumnType("int");

                    b.Property<int>("EstoqueMinimo")
                        .HasColumnType("int");

                    b.Property<string>("Imagem")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Marca")
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.Property<string>("NomeFerragem")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.Property<string>("PrecoFabrica")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrecoVenda")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CodigoFerragem");

                    b.HasIndex("CorId");

                    b.ToTable("FERRAGENS");
                });

            modelBuilder.Entity("Vidracaria_Portal.Models.Administrador.Cadastros.ProdutosModel", b =>
                {
                    b.Property<decimal>("Codigo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("CorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<int>("EstoqueMaximo")
                        .HasColumnType("int");

                    b.Property<int>("EstoqueMinimo")
                        .HasColumnType("int");

                    b.Property<string>("Imagem")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Marca")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PrecoFabrica")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrecoVenda")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Codigo");

                    b.HasIndex("CorId");

                    b.ToTable("PRODUTOS");
                });

            modelBuilder.Entity("Vidracaria_Portal.Models.Administrador.Cadastros.VidrosComunsModel", b =>
                {
                    b.Property<decimal>("CodigoVidro")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("AdesivoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<decimal>("EstoqueMaximo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("EstoqueMinimo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ExpessuraId")
                        .HasColumnType("int");

                    b.Property<string>("Imagem")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Marca")
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.Property<string>("NomeVidro")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.Property<int>("PeliculaId")
                        .HasColumnType("int");

                    b.Property<string>("PrecoFabrica")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrecoVenda")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CodigoVidro");

                    b.HasIndex("AdesivoId");

                    b.HasIndex("ExpessuraId");

                    b.HasIndex("PeliculaId");

                    b.ToTable("VIDROS_COMUNS");
                });

            modelBuilder.Entity("Vidracaria_Portal.Models.Administrador.Cadastros.VidrosTemperadosModel", b =>
                {
                    b.Property<decimal>("CodigoVidro")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("AdesivoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<int>("EstoqueMaximo")
                        .HasColumnType("int");

                    b.Property<int>("EstoqueMinimo")
                        .HasColumnType("int");

                    b.Property<int>("ExpessuraId")
                        .HasColumnType("int");

                    b.Property<string>("Imagem")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Marca")
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.Property<string>("NomeVidro")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.Property<int>("PeliculaId")
                        .HasColumnType("int");

                    b.Property<string>("PrecoFabrica")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PrecoVenda")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CodigoVidro");

                    b.HasIndex("AdesivoId");

                    b.HasIndex("ExpessuraId");

                    b.HasIndex("PeliculaId");

                    b.ToTable("VIDROS_TEMPERADOS");
                });

            modelBuilder.Entity("Vidracaria_Portal.Models.Administrador.Servicos.AprovadosModel", b =>
                {
                    b.Property<decimal>("CodigoAprovado")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Estado")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Imagem")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.Property<int>("NumeroCasa")
                        .HasColumnType("int");

                    b.HasKey("CodigoAprovado");

                    b.ToTable("APROVADOS");
                });

            modelBuilder.Entity("Vidracaria_Portal.Models.Administrador.Servicos.ConcluidosModel", b =>
                {
                    b.Property<decimal>("CodigoConcluido")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Estado")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Imagem")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.Property<int>("NumeroCasa")
                        .HasColumnType("int");

                    b.HasKey("CodigoConcluido");

                    b.ToTable("CONCLUIDOS");
                });

            modelBuilder.Entity("Vidracaria_Portal.Models.Administrador.Servicos.OrcamentosModel", b =>
                {
                    b.Property<decimal>("CodigoOrcamento")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Estado")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Imagem")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.Property<int>("NumeroCasa")
                        .HasColumnType("int");

                    b.HasKey("CodigoOrcamento");

                    b.ToTable("ORCAMENTOS");
                });

            modelBuilder.Entity("Vidracaria_Portal.Models.Administrador.Servicos.PendentesModel", b =>
                {
                    b.Property<decimal>("CodigoPendentes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Estado")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Imagem")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.Property<int>("NumeroCasa")
                        .HasColumnType("int");

                    b.HasKey("CodigoPendentes");

                    b.ToTable("PENDENTES");
                });

            modelBuilder.Entity("Vidracaria_Portal.Models.Cliente.ContatoModel", b =>
                {
                    b.Property<int>("CodigoContato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Assunto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DataContato")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataRetorno")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Retorno")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("CodigoContato");

                    b.ToTable("CONTATOS");
                });

            modelBuilder.Entity("Vidracaria_Portal.Models.Selects.AdesivoModel", b =>
                {
                    b.Property<int>("CodigoAdesivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("CodigoAdesivo");

                    b.ToTable("ADESIVOS");
                });

            modelBuilder.Entity("Vidracaria_Portal.Models.Selects.CoresModel", b =>
                {
                    b.Property<int>("CodigoCor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NomeCor")
                        .HasColumnType("text");

                    b.HasKey("CodigoCor");

                    b.ToTable("CORES");
                });

            modelBuilder.Entity("Vidracaria_Portal.Models.Selects.ExpessurasModel", b =>
                {
                    b.Property<int>("CodigoExpessura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Expessura")
                        .HasColumnType("int");

                    b.HasKey("CodigoExpessura");

                    b.ToTable("EXPESSURA");
                });

            modelBuilder.Entity("Vidracaria_Portal.Models.Selects.PeliculasModel", b =>
                {
                    b.Property<int>("CodigoPelicula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("CodigoPelicula");

                    b.ToTable("PELICULAS");
                });

            modelBuilder.Entity("Vidracaria_Portal.Models.UsuarioModel", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(85)
                        .HasColumnType("varchar(85)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "ea5bbba4-1e98-4c61-ac16-5008d4a90c4e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5b2da004-4e90-4b59-b809-cc6395093146",
                            Email = "admin@vidracariaportal.com.br",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Nome = "Admin",
                            NormalizedEmail = "ADMIN@VIDRACARIAPORTAL.COM.BR",
                            NormalizedUserName = "ADMIN@VIDRACARIAPORTAL.COM.BR",
                            PasswordHash = "AQAAAAEAACcQAAAAEJCAph0J+YlQhZDs6gJ2GGBcbcCBIvwYU+kxN4jErCsIYy+cm6ItamNUX4P7lem22A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "64665535",
                            TwoFactorEnabled = false,
                            UserName = "admin@vidracariaportal.com.br"
                        },
                        new
                        {
                            Id = "080905d3-a941-4100-b35a-cbdc8eda222b",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "535201ff-0d54-4409-89b7-eb1df4b3902a",
                            Email = "tavanoalexandre@outlook.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            Nome = "Alexandre",
                            NormalizedEmail = "TAVANOALEXANDRE@OUTLOOK.COM",
                            NormalizedUserName = "TAVANOALEXANDRE@OUTLOOK.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEAAtl2NAYcqfYGzI1JaURqfyDW/XcCx5Zg/6S/32OH+2nI95aCoRAjHDHFEDt4McSA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "45118907",
                            TwoFactorEnabled = false,
                            UserName = "tavanoalexandre@outlook.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Vidracaria_Portal.Models.UsuarioModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Vidracaria_Portal.Models.UsuarioModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vidracaria_Portal.Models.UsuarioModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Vidracaria_Portal.Models.UsuarioModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Vidracaria_Portal.Models.Administrador.Cadastros.AluminiosModel", b =>
                {
                    b.HasOne("Vidracaria_Portal.Models.Selects.CoresModel", "Cor")
                        .WithMany()
                        .HasForeignKey("CorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cor");
                });

            modelBuilder.Entity("Vidracaria_Portal.Models.Administrador.Cadastros.FerragensModel", b =>
                {
                    b.HasOne("Vidracaria_Portal.Models.Selects.CoresModel", "Cor")
                        .WithMany()
                        .HasForeignKey("CorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cor");
                });

            modelBuilder.Entity("Vidracaria_Portal.Models.Administrador.Cadastros.ProdutosModel", b =>
                {
                    b.HasOne("Vidracaria_Portal.Models.Selects.CoresModel", "Cor")
                        .WithMany()
                        .HasForeignKey("CorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cor");
                });

            modelBuilder.Entity("Vidracaria_Portal.Models.Administrador.Cadastros.VidrosComunsModel", b =>
                {
                    b.HasOne("Vidracaria_Portal.Models.Selects.AdesivoModel", "Adesivo")
                        .WithMany()
                        .HasForeignKey("AdesivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vidracaria_Portal.Models.Selects.ExpessurasModel", "Expessura")
                        .WithMany()
                        .HasForeignKey("ExpessuraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vidracaria_Portal.Models.Selects.PeliculasModel", "Pelicula")
                        .WithMany()
                        .HasForeignKey("PeliculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adesivo");

                    b.Navigation("Expessura");

                    b.Navigation("Pelicula");
                });

            modelBuilder.Entity("Vidracaria_Portal.Models.Administrador.Cadastros.VidrosTemperadosModel", b =>
                {
                    b.HasOne("Vidracaria_Portal.Models.Selects.AdesivoModel", "Adesivo")
                        .WithMany()
                        .HasForeignKey("AdesivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vidracaria_Portal.Models.Selects.ExpessurasModel", "Expessura")
                        .WithMany()
                        .HasForeignKey("ExpessuraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vidracaria_Portal.Models.Selects.PeliculasModel", "Pelicula")
                        .WithMany()
                        .HasForeignKey("PeliculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adesivo");

                    b.Navigation("Expessura");

                    b.Navigation("Pelicula");
                });
#pragma warning restore 612, 618
        }
    }
}
